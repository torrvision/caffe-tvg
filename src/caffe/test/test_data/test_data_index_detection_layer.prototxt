layer {
  name: "data"
  type: "ImageLabelDataIndexDet"
  top: "data"
  top: "label"
  top: "index"
  top: "detections"
  
  transform_param {
    mirror: true
    crop_size: 500
    mean_value: 0#102.93
    mean_value: 0#111.36
    mean_value: 0#116.52

    # Due to image transformations, some detection boxes may no longer appear in the image.
    # Options to deal with this are:
    # "REMOVE": Remove the detection
    # "ZERO_OUT": Set the score of this detection to 0
    invalid_detection_mode: ZERO_OUT
  }
  image_label_data_param {
    image_list_path: "images_test.txt"
    label_list_path: "labels_test.txt"
    
    batch_size: 1
    # Number of channels in the label

    # Shuffle images every epoch
    shuffle: true

    # The size of the labels
    # Change stride and offset if you want to downsample the label
    # This is useful when you don't have an upsampling layer in your training network
    label_slice {
      dim: 500
      dim: 500
      stride: 1
      stride: 1
      offset: 0
      offset: 0
    }
    padding: ZERO # You can choose either reflection padding or zero padding ("REFLECT" or "ZERO")
    pad_centre: true # true: pad from the centre of the image, false: from top corner like in FCN

    #hsv colour jittering
    hsv_noise: true
    h_noise: 10
    s_noise: 30
    v_noise: 30

    #To try different scales
    rand_scale: true
    min_scale: 0.5
    max_scale: 2

    # Do different rotation
    random_rotate: true
    max_rotation_angle: 10
    min_rotation_angle: -10

    # Maybe you want to add a Gaussian blur to the image as well
    random_gaussian_blur: true
    min_kernel_size: 2
    max_kernel_size: 10
    min_sigma_x: 2
    max_sigma_x: 10
    min_sigma_y: 2
    max_sigma_y: 10

    random_box_perturb: true
    box_perturb_max_scale_percent: 5
    box_perturb_max_translate_percent: 5

    # Where to read the detections from
    # box_dir: "detections/"
    # filename_in_idx: true

    box_dir: "bboxes/"
    filename_in_idx: false
    box_extension: ".bbox"
  }
}
